**Trees**
  - Unlike Stacks, Queues, Linked Lists, and Arrays which can only be traversed
    one way, trees can be traversed in multiple different ways


**Depth-First Traversal(DFT)** 
  - Inorder Traversal
    - Steps(Left, Root, Right)
      1. Traverse the left subtree, i.e., call Inorder(left-subtree)
      2. Visit the root.
      3. Traverse the right subtree, i.e., call Inorder(right-subtree)
    - Examples
      - Tree #1: 4, 2, 5, 1, 3

  - Preorder Traversal
    - Can be used to create copy of a tree
    - Steps(Root, Left, Right)
      1. Visit the root.
      2. Traverse the left subtree, i.e., call Preorder(left-subtree)
      3. Traverse the right subtree, i.e., call Preorder(right-subtree)
    - Examples
      - Tree #1: 1, 2, 4, 5 ,3

  - Postorder Traversal
    - Can be used to delete a tree
    - Steps(Left, Right, Root)
      1. Traverse the left subtree, i.e., call Postorder(left-subtree)
      2. Traverse the right subtree, i.e., call Postorder(right-subtree)
      3. Visit the root.
    - Examples
      - Tree #1: 4, 5, 2, 3, 1


##Breadth-First(Level Order) Traversal(BFT)**
  - BFT of Tree #1: 1, 2, 3, 4, 5


**Example Trees**

  - Tree #1
       1
      / \
     2   3
    / \ 
   4   5


**Resources**
- Depth First Traversals: https://www.geeksforgeeks.org/tree-traversals-inorder-preorder-and-postorder/